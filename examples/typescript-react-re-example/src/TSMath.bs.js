// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE

import * as TSMathGen from "./TSMath.gen";

function round(prim) {
  return TSMathGen.round(prim);
}

function area(prim) {
  return TSMathGen.area(prim);
}

function returnMixedArray(prim) {
  return TSMathGen.returnMixedArray();
}

var roundedNumber = TSMathGen.round(1.8);

var areaValue = TSMathGen.area({
      x: 3,
      y: undefined
    });

function getAbs(x) {
  return x.getAbs();
}

var AbsoluteValue = {
  getAbs: getAbs
};

function useGetProp(x) {
  return x.getProp() + 1 | 0;
}

function useGetAbs(x) {
  return x.getAbs() + 1 | 0;
}

function useColor(prim) {
  return TSMathGen.useColor(prim);
}

function higherOrder(prim) {
  return TSMathGen.higherOrder(prim);
}

var returnedFromHigherOrder = TSMathGen.higherOrder(function (prim, prim$1) {
      return prim + prim$1 | 0;
    });

function convertVariant(prim) {
  return TSMathGen.convertVariant(prim);
}

function polymorphic(prim) {
  return TSMathGen.polymorphic(prim);
}

var $$default = TSMathGen.default;

export {
  round ,
  area ,
  returnMixedArray ,
  roundedNumber ,
  areaValue ,
  AbsoluteValue ,
  useGetProp ,
  useGetAbs ,
  useColor ,
  higherOrder ,
  returnedFromHigherOrder ,
  convertVariant ,
  polymorphic ,
  $$default ,
  $$default as default,
  
}
/* roundedNumber Not a pure module */
